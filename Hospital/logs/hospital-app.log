2025-08-25 00:02:39 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-25 00:02:39 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-25 00:02:39 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-25 00:02:39 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-25 00:02:39 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-25 00:02:45 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-25 00:02:45 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 23.0.1 with PID 22124 (D:\SPRINTS\Hospital\Hospital\target\classes started by Lenovo in D:\SPRINTS\Hospital\Hospital)
2025-08-25 00:02:45 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-25 00:02:45 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-25 00:02:46 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-25 00:02:46 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-25 00:02:48 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-25 00:02:48 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 203 ms. Found 8 JPA repository interfaces.
2025-08-25 00:02:49 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-25 00:02:49 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-25 00:02:49 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-25 00:02:49 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-25 00:02:49 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-25 00:02:49 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3720 ms
2025-08-25 00:02:50 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-25 00:02:50 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@46cb578
2025-08-25 00:02:50 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-25 00:02:50 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-25 00:02:50 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-25 00:02:51 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-25 00:02:51 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-25 00:02:51 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-25 00:02:51 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-25 00:02:52 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-25 00:02:54 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-25 00:02:54 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-25 00:02:54 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-25 00:02:54 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-25 00:02:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 5 mappings in 'requestMappingHandlerMapping'
2025-08-25 00:02:55 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-25 00:02:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-25 00:02:55 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-25 00:02:55 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-25 00:02:55 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-25 00:02:55 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-25 00:02:55 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-25 00:02:55 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 11.537 seconds (process running for 12.833)
2025-08-25 00:03:38 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-25 00:03:38 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-25 00:03:38 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-25 00:03:38 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-25 00:03:38 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-25 00:03:38 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@130b5d78
2025-08-25 00:03:38 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2a1a563
2025-08-25 00:03:38 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-25 00:03:38 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-08-25 00:03:38 DEBUG o.s.web.servlet.DispatcherServlet - GET "/admin/get/user/3", parameters={}
2025-08-25 00:03:38 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AdminController#getUser(Long)
2025-08-25 00:03:38 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-25 00:03:38 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-25 00:03:38 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [UserResponseDto(id=3, name=Jane Doe, email=patient@hospital.com, role=PATIENT)]
2025-08-25 00:03:38 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-25 00:06:49 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-25 00:06:49 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-25 00:06:49 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-25 00:06:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-25 00:06:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-25 00:07:28 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-25 00:07:28 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 23.0.1 with PID 17768 (D:\SPRINTS\Hospital\Hospital\target\classes started by Lenovo in D:\SPRINTS\Hospital\Hospital)
2025-08-25 00:07:28 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-25 00:07:28 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-25 00:07:28 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-25 00:07:28 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-25 00:07:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-25 00:07:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 193 ms. Found 8 JPA repository interfaces.
2025-08-25 00:07:31 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-25 00:07:31 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-25 00:07:31 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-25 00:07:31 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-25 00:07:32 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-25 00:07:32 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3599 ms
2025-08-25 00:07:32 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-25 00:07:32 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2524e394
2025-08-25 00:07:32 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-25 00:07:32 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-25 00:07:33 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-25 00:07:33 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-25 00:07:33 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-25 00:07:33 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-25 00:07:33 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-25 00:07:33 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-25 00:07:35 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-25 00:07:35 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-25 00:07:35 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-25 00:07:36 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-25 00:07:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 5 mappings in 'requestMappingHandlerMapping'
2025-08-25 00:07:36 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-25 00:07:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-25 00:07:36 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-25 00:07:37 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-25 00:07:37 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-25 00:07:37 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-25 00:07:37 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-25 00:07:37 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 10.393 seconds (process running for 11.659)
2025-08-25 00:07:40 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-25 00:07:40 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-25 00:07:40 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-25 00:07:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-25 00:07:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-25 00:19:14 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-25 00:19:14 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 23.0.1 with PID 22572 (D:\SPRINTS\Hospital\Hospital\target\classes started by Lenovo in D:\SPRINTS\Hospital\Hospital)
2025-08-25 00:19:14 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-25 00:19:14 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-25 00:19:15 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-25 00:19:15 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-25 00:19:17 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-25 00:19:17 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 209 ms. Found 8 JPA repository interfaces.
2025-08-25 00:19:19 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-25 00:19:19 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-25 00:19:19 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-25 00:19:19 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-25 00:19:19 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-25 00:19:19 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4266 ms
2025-08-25 00:19:19 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-25 00:19:19 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@43b81366
2025-08-25 00:19:19 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-25 00:19:20 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-25 00:19:20 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-25 00:19:20 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-25 00:19:21 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-25 00:19:21 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-25 00:19:21 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-25 00:19:21 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-25 00:19:23 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-25 00:19:23 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-25 00:19:23 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-25 00:19:24 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-25 00:19:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 5 mappings in 'requestMappingHandlerMapping'
2025-08-25 00:19:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-25 00:19:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-25 00:19:24 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-25 00:19:24 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-25 00:19:25 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: e60b37ec-504c-446e-b119-a33cc91f2e7f

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-25 00:19:25 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-25 00:19:25 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-25 00:19:25 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-25 00:19:25 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-25 00:19:25 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 12.038 seconds (process running for 13.068)
2025-08-25 00:24:31 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-25 00:24:32 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-25 00:24:32 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-25 00:24:32 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-25 00:24:32 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 16:32:56 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 16:32:56 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 22216 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 16:32:56 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 16:32:56 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 16:32:56 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4c4f4365
2025-08-26 16:32:56 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 16:32:56 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 8 JPA repository interfaces.
2025-08-26 16:32:57 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 16:32:57 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 16:32:57 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 16:32:57 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 16:32:57 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 16:32:57 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 16:32:57 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 16:32:57 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 16:32:57 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 16:32:58 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 16:32:58 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 16:32:58 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:32:58 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 16:32:59 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 16:32:59 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 16:32:59 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 16:32:59 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 16:32:59 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 16:32:59 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 16:32:59 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: e1866c3d-2e52-46ff-8b83-14355f983640

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 16:32:59 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 16:32:59 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 16:32:59 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 16:32:59 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-26 16:32:59 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.985 seconds (process running for 5.092)
2025-08-26 16:33:00 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:33:00 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:33:00 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4c4f4365, started on Tue Aug 26 16:32:56 EEST 2025
2025-08-26 16:33:00 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:33:00 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 16:33:00 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 16:34:36 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 16:34:37 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 26284 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 16:34:37 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 16:34:37 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 16:34:37 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4c4f4365
2025-08-26 16:34:37 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 16:34:37 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 8 JPA repository interfaces.
2025-08-26 16:34:38 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 16:34:38 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 16:34:38 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 16:34:38 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 16:34:38 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 16:34:38 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 16:34:38 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 16:34:38 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 16:34:38 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 16:34:39 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 16:34:39 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 16:34:39 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:34:39 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 16:34:39 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 16:34:40 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 16:34:40 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 16:34:40 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 16:34:40 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 16:34:40 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 16:34:40 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: f2c80298-094d-433d-9f40-a3a7ff0b11a3

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 16:34:40 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 16:34:40 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 16:34:40 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 16:34:40 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-26 16:34:40 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.911 seconds (process running for 4.706)
2025-08-26 16:34:40 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:34:40 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:34:41 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:34:41 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4c4f4365, started on Tue Aug 26 16:34:37 EEST 2025
2025-08-26 16:34:41 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:34:41 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 16:34:41 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 16:35:57 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 16:35:58 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 23144 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 16:35:58 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 16:35:58 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 16:35:58 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4c4f4365
2025-08-26 16:35:58 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 16:35:58 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 8 JPA repository interfaces.
2025-08-26 16:35:58 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 16:35:59 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 16:35:59 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 16:35:59 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 16:35:59 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 16:35:59 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 16:35:59 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 16:35:59 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 16:35:59 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 16:36:00 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 16:36:00 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 16:36:00 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:36:00 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 16:36:00 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 16:36:00 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 16:36:01 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 16:36:01 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 16:36:01 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: d43781a7-ed0e-4363-9902-16f15e1d9f28

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 16:36:01 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 16:36:01 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 16:36:01 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 16:36:01 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-26 16:36:01 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.679 seconds (process running for 4.464)
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=1, patientId=2, appointmentTime=2025-08-27T16:36:01.757282500, durati (truncated)...]
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:36:01.757282500, durationMinutes=30, appo (truncated)...]
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByDoctor(Long)
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:36:01.757283, durationMinutes=30, appoin (truncated)...]
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByPatient(Long)
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:36:01.757283, durationMinutes=30, appoin (truncated)...]
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=3, patientId=4, appointmentTime=2025-08-28T16:36:01.985004400, durati (truncated)...]
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:36:01.985004400, durationMinutes=60, appo (truncated)...]
2025-08-26 16:36:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#cancelAppointment(Long)
2025-08-26 16:36:01 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        a1_0.duration_minutes,
        a1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments a1_0 
    join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        a1_0.id=?
2025-08-26 16:36:02 DEBUG org.hibernate.SQL - 
    update
        appointments 
    set
        appointment_status=?,
        appointment_time=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=? 
    where
        id=?
2025-08-26 16:36:02 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:36:02 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:36:01.985004, durationMinutes=60, appoint (truncated)...]
2025-08-26 16:36:02 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4c4f4365, started on Tue Aug 26 16:35:58 EEST 2025
2025-08-26 16:36:02 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:36:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 16:36:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 16:36:24 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 16:36:24 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 23988 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 16:36:24 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 16:36:24 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 16:36:24 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4d2a1da3
2025-08-26 16:36:25 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 16:36:25 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 8 JPA repository interfaces.
2025-08-26 16:36:25 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 16:36:25 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 16:36:26 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 16:36:26 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 16:36:26 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 16:36:26 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 16:36:26 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 16:36:26 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 16:36:26 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 16:36:27 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 16:36:27 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 16:36:27 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:36:27 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 16:36:27 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 16:36:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 16:36:28 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 16:36:28 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 16:36:28 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 16:36:28 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 16:36:28 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 76bd0403-a4a0-453a-95c9-fcf366456783

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 16:36:28 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 16:36:28 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 16:36:28 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 16:36:28 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-26 16:36:28 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.944 seconds (process running for 4.732)
2025-08-26 16:36:28 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:36:28 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:36:28 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:36:28 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:36:28 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:36:28 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:36:28 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:36:29 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:36:29 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4d2a1da3, started on Tue Aug 26 16:36:24 EEST 2025
2025-08-26 16:36:29 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:36:29 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 16:36:29 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 16:37:03 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 16:37:03 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 5320 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 16:37:03 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 16:37:03 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 16:37:03 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4c4f4365
2025-08-26 16:37:03 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 16:37:03 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 8 JPA repository interfaces.
2025-08-26 16:37:04 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 16:37:04 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 16:37:04 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 16:37:04 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 16:37:04 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 16:37:04 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 16:37:04 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 16:37:04 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 16:37:04 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 16:37:05 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 16:37:05 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 16:37:05 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:37:05 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 16:37:06 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 16:37:06 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 16:37:06 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 16:37:06 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 16:37:06 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 16:37:06 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 16:37:06 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 0cd36466-2fb1-4970-9fe2-a65f8761c8e3

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 16:37:06 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 16:37:06 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 16:37:06 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 16:37:06 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-26 16:37:06 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.913 seconds (process running for 4.716)
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=1, patientId=2, appointmentTime=2025-08-27T16:37:07.314590300, durati (truncated)...]
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:37:07.314590300, durationMinutes=30, appo (truncated)...]
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByDoctor(Long)
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:37:07.314590, durationMinutes=30, appoin (truncated)...]
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByPatient(Long)
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:37:07.314590, durationMinutes=30, appoin (truncated)...]
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=3, patientId=4, appointmentTime=2025-08-28T16:37:07.547351, durationM (truncated)...]
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:37:07.547351, durationMinutes=60, appoint (truncated)...]
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#cancelAppointment(Long)
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        a1_0.duration_minutes,
        a1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments a1_0 
    join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        a1_0.id=?
2025-08-26 16:37:07 DEBUG org.hibernate.SQL - 
    update
        appointments 
    set
        appointment_status=?,
        appointment_time=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=? 
    where
        id=?
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:37:07 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:37:07.547351, durationMinutes=60, appoint (truncated)...]
2025-08-26 16:37:07 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4c4f4365, started on Tue Aug 26 16:37:03 EEST 2025
2025-08-26 16:37:07 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:37:07 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 16:37:07 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 16:40:17 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 16:40:17 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 26364 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 16:40:17 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 16:40:17 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 16:40:17 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3c904f1e
2025-08-26 16:40:18 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 16:40:18 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51 ms. Found 8 JPA repository interfaces.
2025-08-26 16:40:19 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 16:40:19 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 16:40:19 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 16:40:19 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 16:40:19 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 16:40:19 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 16:40:19 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 16:40:19 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 16:40:19 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 16:40:20 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 16:40:20 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 16:40:20 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:40:20 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 16:40:20 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 16:40:20 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 16:40:21 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 16:40:21 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 16:40:21 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 16:40:21 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 16:40:21 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: e6559738-86e2-4f05-a150-993df2ba9e7b

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 16:40:21 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 16:40:21 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 16:40:21 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 16:40:21 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-26 16:40:21 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.782 seconds (process running for 4.564)
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:40:21 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:40:21 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=1, patientId=2, appointmentTime=2025-08-27T16:40:21.810726100, durati (truncated)...]
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:40:21 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:40:21 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:40:21.810726100, durationMinutes=30, appo (truncated)...]
2025-08-26 16:40:21 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByDoctor(Long)
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:21 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:40:21 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:40:21.810726, durationMinutes=30, appoin (truncated)...]
2025-08-26 16:40:21 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByPatient(Long)
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:21 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:40:21 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:40:21.810726, durationMinutes=30, appoin (truncated)...]
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:40:21 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=3, patientId=4, appointmentTime=2025-08-28T16:40:22.010894300, durati (truncated)...]
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:40:22.010894300, durationMinutes=60, appo (truncated)...]
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#cancelAppointment(Long)
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        a1_0.duration_minutes,
        a1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments a1_0 
    join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        a1_0.id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    update
        appointments 
    set
        appointment_status=?,
        appointment_time=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=? 
    where
        id=?
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:40:22.010894, durationMinutes=60, appoint (truncated)...]
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T10:40:22.053529600, durati (truncated)...]
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=3, appointmentTime=2025-08-27T10:40:22.053529600, durationMinutes=30, appo (truncated)...]
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T10:40:22.053529600, durati (truncated)...]
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=4, appointmentTime=2025-08-27T10:40:22.053529600, durationMinutes=30, appo (truncated)...]
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=9999, patientId=8, appointmentTime=2025-08-27T16:40:22.098097600, dur (truncated)...]
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:40:22 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=9, patientId=10, appointmentTime=2025-08-27T16:40:22.119631600, durat (truncated)...]
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler hospitalSystem.example.Hospital.exception.GlobalExceptionHandler#handleValidationErrors(MethodArgumentNotValidException)
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{messages={durationMinutes=must be greater than or equal to 5}, error=Validation Error, timestamp=20 (truncated)...]
2025-08-26 16:40:22 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<hospitalSystem.example.Hospital.dto.response.AppointmentResponseDto> hospitalSystem.example.Hospital.controller.AppointmentController.createAppointment(hospitalSystem.example.Hospital.dto.request.AppointmentRequestDto): [Field error in object 'appointmentRequestDto' on field 'durationMinutes': rejected value [2]; codes [Min.appointmentRequestDto.durationMinutes,Min.durationMinutes,Min.java.lang.Integer,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [appointmentRequestDto.durationMinutes,durationMinutes]; arguments []; default message [durationMinutes],5]; default message [must be greater than or equal to 5]] ]
2025-08-26 16:40:22 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@3c904f1e, started on Tue Aug 26 16:40:17 EEST 2025
2025-08-26 16:40:22 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:40:22 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 16:40:22 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 16:43:52 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 16:43:52 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 25432 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 16:43:52 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 16:43:52 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 16:43:52 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@d56aaa6
2025-08-26 16:43:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 16:43:53 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 8 JPA repository interfaces.
2025-08-26 16:43:53 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 16:43:53 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 16:43:53 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 16:43:53 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 16:43:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 16:43:53 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 16:43:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 16:43:53 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 16:43:53 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 16:43:54 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 16:43:54 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 16:43:54 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:43:54 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 16:43:55 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 16:43:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 16:43:55 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 16:43:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 16:43:55 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 16:43:55 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 16:43:55 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: a4c7b1d9-570d-4b8f-9f37-cda05421284d

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 16:43:55 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 16:43:55 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 16:43:55 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 16:43:55 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-26 16:43:55 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.744 seconds (process running for 4.513)
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=1, patientId=2, appointmentTime=2025-08-27T16:43:56.216063, durationM (truncated)...]
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:43:56.216063, durationMinutes=30, appoint (truncated)...]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByDoctor(Long)
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:43:56.216063, durationMinutes=30, appoin (truncated)...]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByPatient(Long)
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:43:56.216063, durationMinutes=30, appoin (truncated)...]
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=3, patientId=4, appointmentTime=2025-08-28T16:43:56.420022900, durati (truncated)...]
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:43:56.420022900, durationMinutes=60, appo (truncated)...]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#cancelAppointment(Long)
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        a1_0.duration_minutes,
        a1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments a1_0 
    join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        a1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    update
        appointments 
    set
        appointment_status=?,
        appointment_time=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=? 
    where
        id=?
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:43:56.420023, durationMinutes=60, appoint (truncated)...]
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T16:43:56.462300500, durati (truncated)...]
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=3, appointmentTime=2025-08-27T16:43:56.462300500, durationMinutes=30, appo (truncated)...]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T16:43:56.462300500, durati (truncated)...]
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=4, appointmentTime=2025-08-27T16:43:56.462300500, durationMinutes=30, appo (truncated)...]
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=7, patientId=8, appointmentTime=2025-08-27T12:43:56.504920200, durati (truncated)...]
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=5, appointmentTime=2025-08-27T12:43:56.504920200, durationMinutes=30, appo (truncated)...]
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=9, patientId=8, appointmentTime=2025-08-27T12:43:56.504920200, durati (truncated)...]
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=6, appointmentTime=2025-08-27T12:43:56.504920200, durationMinutes=30, appo (truncated)...]
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=10, patientId=11, appointmentTime=2025-08-27T16:43:56.557243800, dura (truncated)...]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler hospitalSystem.example.Hospital.exception.GlobalExceptionHandler#handleValidationErrors(MethodArgumentNotValidException)
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{messages={durationMinutes=must be greater than or equal to 5}, error=Validation Error, timestamp=20 (truncated)...]
2025-08-26 16:43:56 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<hospitalSystem.example.Hospital.dto.response.AppointmentResponseDto> hospitalSystem.example.Hospital.controller.AppointmentController.createAppointment(hospitalSystem.example.Hospital.dto.request.AppointmentRequestDto): [Field error in object 'appointmentRequestDto' on field 'durationMinutes': rejected value [2]; codes [Min.appointmentRequestDto.durationMinutes,Min.durationMinutes,Min.java.lang.Integer,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [appointmentRequestDto.durationMinutes,durationMinutes]; arguments []; default message [durationMinutes],5]; default message [must be greater than or equal to 5]] ]
2025-08-26 16:43:56 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@d56aaa6, started on Tue Aug 26 16:43:52 EEST 2025
2025-08-26 16:43:56 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:43:56 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 16:43:56 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 16:46:21 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 16:46:21 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 24544 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 16:46:21 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 16:46:21 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 16:46:21 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@d56aaa6
2025-08-26 16:46:22 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 16:46:22 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 8 JPA repository interfaces.
2025-08-26 16:46:22 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 16:46:22 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 16:46:22 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 16:46:23 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 16:46:23 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 16:46:23 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 16:46:23 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 16:46:23 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 16:46:23 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 16:46:24 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 16:46:24 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 16:46:24 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:46:24 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 16:46:24 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 16:46:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 16:46:25 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 16:46:25 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 16:46:25 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: e1178c13-39e7-4951-9375-d843cb053959

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 16:46:25 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 16:46:25 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 16:46:25 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 16:46:25 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-26 16:46:25 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.937 seconds (process running for 4.727)
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=1, patientId=2, appointmentTime=2025-08-27T16:46:25.739655, durationM (truncated)...]
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:46:25.739655, durationMinutes=30, appoint (truncated)...]
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByDoctor(Long)
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:46:25.739655, durationMinutes=30, appoin (truncated)...]
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByPatient(Long)
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:46:25.739655, durationMinutes=30, appoin (truncated)...]
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=3, patientId=4, appointmentTime=2025-08-28T16:46:25.974447100, durati (truncated)...]
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:46:25.974447100, durationMinutes=60, appo (truncated)...]
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#cancelAppointment(Long)
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        a1_0.duration_minutes,
        a1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments a1_0 
    join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        a1_0.id=?
2025-08-26 16:46:25 DEBUG org.hibernate.SQL - 
    update
        appointments 
    set
        appointment_status=?,
        appointment_time=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=? 
    where
        id=?
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:46:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:46:25.974447, durationMinutes=60, appoint (truncated)...]
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T16:46:26.013001900, durati (truncated)...]
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=3, appointmentTime=2025-08-27T16:46:26.013001900, durationMinutes=30, appo (truncated)...]
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T16:46:26.013001900, durati (truncated)...]
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=4, appointmentTime=2025-08-27T16:46:26.013001900, durationMinutes=30, appo (truncated)...]
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=7, patientId=8, appointmentTime=2025-08-27T12:46:26.053763900, durati (truncated)...]
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=5, appointmentTime=2025-08-27T12:46:26.053763900, durationMinutes=30, appo (truncated)...]
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=9, patientId=8, appointmentTime=2025-08-27T12:46:26.053763900, durati (truncated)...]
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=6, appointmentTime=2025-08-27T12:46:26.053763900, durationMinutes=30, appo (truncated)...]
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:46:26 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=10, patientId=11, appointmentTime=2025-08-27T16:46:26.096401500, dura (truncated)...]
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler hospitalSystem.example.Hospital.exception.GlobalExceptionHandler#handleValidationErrors(MethodArgumentNotValidException)
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{messages={durationMinutes=must be greater than or equal to 5}, error=Validation Error, timestamp=20 (truncated)...]
2025-08-26 16:46:26 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<hospitalSystem.example.Hospital.dto.response.AppointmentResponseDto> hospitalSystem.example.Hospital.controller.AppointmentController.createAppointment(hospitalSystem.example.Hospital.dto.request.AppointmentRequestDto): [Field error in object 'appointmentRequestDto' on field 'durationMinutes': rejected value [2]; codes [Min.appointmentRequestDto.durationMinutes,Min.durationMinutes,Min.java.lang.Integer,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [appointmentRequestDto.durationMinutes,durationMinutes]; arguments []; default message [durationMinutes],5]; default message [must be greater than or equal to 5]] ]
2025-08-26 16:46:26 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@d56aaa6, started on Tue Aug 26 16:46:21 EEST 2025
2025-08-26 16:46:26 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:46:26 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 16:46:26 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 16:51:29 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 16:51:29 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 16624 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 16:51:29 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 16:51:29 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 16:51:29 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@d56aaa6
2025-08-26 16:51:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 16:51:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 8 JPA repository interfaces.
2025-08-26 16:51:30 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 16:51:30 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 16:51:30 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 16:51:30 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 16:51:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 16:51:31 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 16:51:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 16:51:31 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 16:51:31 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 16:51:31 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 16:51:31 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 16:51:31 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:51:31 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 16:51:32 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 16:51:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 16:51:32 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 16:51:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 16:51:32 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 16:51:32 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 16:51:33 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 41e51068-b91a-42bd-92f0-2be986a24aa4

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 16:51:33 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 16:51:33 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 16:51:33 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 16:51:33 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-26 16:51:33 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.813 seconds (process running for 4.6)
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=1, patientId=2, appointmentTime=2025-08-27T16:51, durationMinutes=30, (truncated)...]
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:51, durationMinutes=30, appointmentStatus (truncated)...]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByDoctor(Long)
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:51, durationMinutes=30, appointmentStatu (truncated)...]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByPatient(Long)
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:51, durationMinutes=30, appointmentStatu (truncated)...]
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=3, patientId=4, appointmentTime=2025-08-28T16:51, durationMinutes=60, (truncated)...]
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:51, durationMinutes=60, appointmentStatus (truncated)...]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#cancelAppointment(Long)
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        a1_0.duration_minutes,
        a1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments a1_0 
    join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        a1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    update
        appointments 
    set
        appointment_status=?,
        appointment_time=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=? 
    where
        id=?
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:51, durationMinutes=60, appointmentStatus (truncated)...]
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T16:51, durationMinutes=30, (truncated)...]
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=3, appointmentTime=2025-08-27T16:51, durationMinutes=30, appointmentStatus (truncated)...]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T16:51, durationMinutes=30, (truncated)...]
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=7, patientId=8, appointmentTime=2025-08-27T12:51, durationMinutes=30, (truncated)...]
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=4, appointmentTime=2025-08-27T12:51, durationMinutes=30, appointmentStatus (truncated)...]
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=9, patientId=8, appointmentTime=2025-08-27T12:51, durationMinutes=30, (truncated)...]
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=10, patientId=11, appointmentTime=2025-08-27T16:51, durationMinutes=2 (truncated)...]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler hospitalSystem.example.Hospital.exception.GlobalExceptionHandler#handleValidationErrors(MethodArgumentNotValidException)
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{messages={durationMinutes=must be greater than or equal to 5}, error=Validation Error, timestamp=20 (truncated)...]
2025-08-26 16:51:33 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<hospitalSystem.example.Hospital.dto.response.AppointmentResponseDto> hospitalSystem.example.Hospital.controller.AppointmentController.createAppointment(hospitalSystem.example.Hospital.dto.request.AppointmentRequestDto): [Field error in object 'appointmentRequestDto' on field 'durationMinutes': rejected value [2]; codes [Min.appointmentRequestDto.durationMinutes,Min.durationMinutes,Min.java.lang.Integer,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [appointmentRequestDto.durationMinutes,durationMinutes]; arguments []; default message [durationMinutes],5]; default message [must be greater than or equal to 5]] ]
2025-08-26 16:51:33 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@d56aaa6, started on Tue Aug 26 16:51:29 EEST 2025
2025-08-26 16:51:33 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:51:33 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 16:51:33 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 16:53:26 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 16:53:26 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 23580 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 16:53:26 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 16:53:26 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 16:53:26 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@d56aaa6
2025-08-26 16:53:27 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 16:53:27 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 8 JPA repository interfaces.
2025-08-26 16:53:27 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 16:53:27 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 16:53:27 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 16:53:28 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 16:53:28 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 16:53:28 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 16:53:28 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 16:53:28 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 16:53:28 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 16:53:29 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 16:53:29 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 16:53:29 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:53:29 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 16:53:29 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 16:53:29 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 16:53:29 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 16:53:29 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 16:53:30 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 16:53:30 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 2a74a3e1-0708-4d3d-880a-0f59ce8231cb

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 16:53:30 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 16:53:30 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 16:53:30 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 16:53:30 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-26 16:53:30 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.833 seconds (process running for 4.61)
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=1, patientId=2, appointmentTime=2025-08-27T16:53, durationMinutes=30, (truncated)...]
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:53, durationMinutes=30, appointmentStatus (truncated)...]
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByDoctor(Long)
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:53, durationMinutes=30, appointmentStatu (truncated)...]
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByPatient(Long)
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:53, durationMinutes=30, appointmentStatu (truncated)...]
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=3, patientId=4, appointmentTime=2025-08-28T16:53, durationMinutes=60, (truncated)...]
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:53, durationMinutes=60, appointmentStatus (truncated)...]
2025-08-26 16:53:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#cancelAppointment(Long)
2025-08-26 16:53:30 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        a1_0.duration_minutes,
        a1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments a1_0 
    join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        a1_0.id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    update
        appointments 
    set
        appointment_status=?,
        appointment_time=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=? 
    where
        id=?
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:53, durationMinutes=60, appointmentStatus (truncated)...]
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T16:53, durationMinutes=30, (truncated)...]
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=3, appointmentTime=2025-08-27T16:53, durationMinutes=30, appointmentStatus (truncated)...]
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T16:53, durationMinutes=30, (truncated)...]
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Doctor is already booked at this time."]
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=7, patientId=8, appointmentTime=2025-08-27T12:53, durationMinutes=30, (truncated)...]
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=4, appointmentTime=2025-08-27T12:53, durationMinutes=30, appointmentStatus (truncated)...]
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=9, patientId=8, appointmentTime=2025-08-27T12:53, durationMinutes=30, (truncated)...]
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Patient already has an appointment at this time."]
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:53:31 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=10, patientId=11, appointmentTime=2025-08-27T16:53, durationMinutes=2 (truncated)...]
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler hospitalSystem.example.Hospital.exception.GlobalExceptionHandler#handleValidationErrors(MethodArgumentNotValidException)
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{messages={durationMinutes=must be greater than or equal to 5}, error=Validation Error, timestamp=20 (truncated)...]
2025-08-26 16:53:31 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> hospitalSystem.example.Hospital.controller.AppointmentController.createAppointment(hospitalSystem.example.Hospital.dto.request.AppointmentRequestDto): [Field error in object 'appointmentRequestDto' on field 'durationMinutes': rejected value [2]; codes [Min.appointmentRequestDto.durationMinutes,Min.durationMinutes,Min.java.lang.Integer,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [appointmentRequestDto.durationMinutes,durationMinutes]; arguments []; default message [durationMinutes],5]; default message [must be greater than or equal to 5]] ]
2025-08-26 16:53:31 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@d56aaa6, started on Tue Aug 26 16:53:26 EEST 2025
2025-08-26 16:53:31 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:53:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 16:53:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 16:55:07 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 16:55:07 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 23332 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 16:55:07 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 16:55:07 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 16:55:07 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@d56aaa6
2025-08-26 16:55:08 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 16:55:08 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 8 JPA repository interfaces.
2025-08-26 16:55:08 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 16:55:08 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 16:55:08 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 16:55:08 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 16:55:08 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 16:55:09 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 16:55:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 16:55:09 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 16:55:09 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 16:55:09 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 16:55:09 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 16:55:09 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:55:09 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 16:55:10 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 16:55:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 16:55:10 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 16:55:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 16:55:10 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 16:55:10 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 16:55:10 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 8477c67f-af62-4ebf-bf8a-d8f5f2c13328

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 16:55:10 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 16:55:11 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 16:55:11 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 16:55:11 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-26 16:55:11 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.765 seconds (process running for 4.554)
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=1, patientId=2, appointmentTime=2025-08-27T16:55, durationMinutes=30, (truncated)...]
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:55, durationMinutes=30, appointmentStatus (truncated)...]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByDoctor(Long)
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:55, durationMinutes=30, appointmentStatu (truncated)...]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByPatient(Long)
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:55, durationMinutes=30, appointmentStatu (truncated)...]
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=3, patientId=4, appointmentTime=2025-08-28T16:55, durationMinutes=60, (truncated)...]
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:55, durationMinutes=60, appointmentStatus (truncated)...]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#cancelAppointment(Long)
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        a1_0.duration_minutes,
        a1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments a1_0 
    join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        a1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    update
        appointments 
    set
        appointment_status=?,
        appointment_time=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=? 
    where
        id=?
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:55, durationMinutes=60, appointmentStatus (truncated)...]
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T16:55, durationMinutes=30, (truncated)...]
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=3, appointmentTime=2025-08-27T16:55, durationMinutes=30, appointmentStatus (truncated)...]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T16:55, durationMinutes=30, (truncated)...]
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Doctor is already booked at this time."]
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=7, patientId=8, appointmentTime=2025-08-27T12:55, durationMinutes=30, (truncated)...]
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=4, appointmentTime=2025-08-27T12:55, durationMinutes=30, appointmentStatus (truncated)...]
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=9, patientId=8, appointmentTime=2025-08-27T12:55, durationMinutes=30, (truncated)...]
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Patient already has an appointment at this time."]
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=10, patientId=11, appointmentTime=2025-08-27T16:55, durationMinutes=2 (truncated)...]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler hospitalSystem.example.Hospital.exception.GlobalExceptionHandler#handleValidationErrors(MethodArgumentNotValidException)
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{messages={durationMinutes=must be greater than or equal to 5}, error=Validation Error, timestamp=20 (truncated)...]
2025-08-26 16:55:11 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> hospitalSystem.example.Hospital.controller.AppointmentController.createAppointment(hospitalSystem.example.Hospital.dto.request.AppointmentRequestDto): [Field error in object 'appointmentRequestDto' on field 'durationMinutes': rejected value [2]; codes [Min.appointmentRequestDto.durationMinutes,Min.durationMinutes,Min.java.lang.Integer,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [appointmentRequestDto.durationMinutes,durationMinutes]; arguments []; default message [durationMinutes],5]; default message [must be greater than or equal to 5]] ]
2025-08-26 16:55:11 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@d56aaa6, started on Tue Aug 26 16:55:07 EEST 2025
2025-08-26 16:55:11 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:55:11 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 16:55:11 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 16:58:10 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 16:58:10 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 2548 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 16:58:10 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 16:58:10 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 16:58:10 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3c904f1e
2025-08-26 16:58:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 16:58:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 8 JPA repository interfaces.
2025-08-26 16:58:11 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 16:58:11 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 16:58:11 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 16:58:11 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 16:58:11 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 16:58:11 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 16:58:11 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 16:58:11 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 16:58:11 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 16:58:12 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 16:58:12 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 16:58:12 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:58:12 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 16:58:12 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 16:58:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 16:58:13 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 16:58:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 16:58:13 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 16:58:13 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 16:58:13 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: e46f2cdb-b5fb-48b5-bccb-42ad89a968c9

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 16:58:13 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 16:58:13 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 16:58:13 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 16:58:13 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-08-26 16:58:13 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.843 seconds (process running for 4.619)
2025-08-26 16:58:13 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:58:13 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:58:13 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=1, patientId=2, appointmentTime=2025-08-27T16:58, durationMinutes=30, (truncated)...]
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:58, durationMinutes=30, appointmentStatus (truncated)...]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByDoctor(Long)
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:58, durationMinutes=30, appointmentStatu (truncated)...]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByPatient(Long)
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T16:58, durationMinutes=30, appointmentStatu (truncated)...]
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=3, patientId=4, appointmentTime=2025-08-28T16:58, durationMinutes=60, (truncated)...]
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:58, durationMinutes=60, appointmentStatus (truncated)...]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#cancelAppointment(Long)
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        a1_0.duration_minutes,
        a1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments a1_0 
    join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        a1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    update
        appointments 
    set
        appointment_status=?,
        appointment_time=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=? 
    where
        id=?
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T16:58, durationMinutes=60, appointmentStatus (truncated)...]
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T16:58:14.256880200, durati (truncated)...]
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=3, appointmentTime=2025-08-27T16:58:14.256880200, durationMinutes=30, appo (truncated)...]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T16:58:14.256880200, durati (truncated)...]
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=4, appointmentTime=2025-08-27T16:58:14.256880200, durationMinutes=30, appo (truncated)...]
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=7, patientId=8, appointmentTime=2025-08-27T12:58:14.294889800, durati (truncated)...]
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=5, appointmentTime=2025-08-27T12:58:14.294889800, durationMinutes=30, appo (truncated)...]
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=9, patientId=8, appointmentTime=2025-08-27T12:58:14.294889800, durati (truncated)...]
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time=? 
    fetch
        first ? rows only
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=6, appointmentTime=2025-08-27T12:58:14.294889800, durationMinutes=30, appo (truncated)...]
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=10, patientId=11, appointmentTime=2025-08-27T16:58, durationMinutes=2 (truncated)...]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler hospitalSystem.example.Hospital.exception.GlobalExceptionHandler#handleValidationErrors(MethodArgumentNotValidException)
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{messages={durationMinutes=must be greater than or equal to 5}, error=Validation Error, timestamp=20 (truncated)...]
2025-08-26 16:58:14 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> hospitalSystem.example.Hospital.controller.AppointmentController.createAppointment(hospitalSystem.example.Hospital.dto.request.AppointmentRequestDto): [Field error in object 'appointmentRequestDto' on field 'durationMinutes': rejected value [2]; codes [Min.appointmentRequestDto.durationMinutes,Min.durationMinutes,Min.java.lang.Integer,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [appointmentRequestDto.durationMinutes,durationMinutes]; arguments []; default message [durationMinutes],5]; default message [must be greater than or equal to 5]] ]
2025-08-26 16:58:14 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@3c904f1e, started on Tue Aug 26 16:58:10 EEST 2025
2025-08-26 16:58:14 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 16:58:14 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 16:58:14 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-26 17:01:49 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-26 17:01:49 INFO  h.e.H.c.AppointmentControllerTest - Starting AppointmentControllerTest using Java 21.0.3 with PID 25728 (started by mada1 in D:\Projects\Uni\Hospital-Management-System\Hospital)
2025-08-26 17:01:49 DEBUG h.e.H.c.AppointmentControllerTest - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-26 17:01:49 INFO  h.e.H.c.AppointmentControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-08-26 17:01:49 DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3c904f1e
2025-08-26 17:01:49 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-26 17:01:49 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 8 JPA repository interfaces.
2025-08-26 17:01:50 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-26 17:01:50 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-26 17:01:50 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-26 17:01:50 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-26 17:01:50 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-26 17:01:50 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hospital_db user=SA
2025-08-26 17:01:50 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-26 17:01:50 WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-26 17:01:50 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-26 17:01:51 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint generated by default as identity,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time timestamp(6) not null,
        duration_minutes integer not null check ((duration_minutes<=480) and (duration_minutes>=5)),
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint generated by default as identity,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    )
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint generated by default as identity,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    )
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint generated by default as identity,
        content varchar(100) not null,
        timestamp timestamp(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    )
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    )
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    )
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint generated by default as identity,
        issued_at timestamp(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    )
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    )
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users
2025-08-26 17:01:51 DEBUG org.hibernate.SQL - 
    alter table if exists prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users
2025-08-26 17:01:51 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 17:01:51 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-26 17:01:52 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-26 17:01:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 9 mappings in 'requestMappingHandlerMapping'
2025-08-26 17:01:52 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-26 17:01:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-26 17:01:52 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-26 17:01:52 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hospital_db'
2025-08-26 17:01:52 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 54cc96be-ccee-4ce8-a9df-754e35c0a3d3

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-26 17:01:52 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-26 17:01:52 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-26 17:01:52 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-26 17:01:52 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-08-26 17:01:52 INFO  h.e.H.c.AppointmentControllerTest - Started AppointmentControllerTest in 3.56 seconds (process running for 4.352)
2025-08-26 17:01:52 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 17:01:52 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 17:01:52 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=1, patientId=2, appointmentTime=2025-08-27T17:01, durationMinutes=30, (truncated)...]
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time between ? and ? 
    fetch
        first ? rows only
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time between ? and ? 
    fetch
        first ? rows only
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=1, appointmentTime=2025-08-27T17:01, durationMinutes=30, appointmentStatus (truncated)...]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByDoctor(Long)
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T17:01, durationMinutes=30, appointmentStatu (truncated)...]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#getAppointmentsByPatient(Long)
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[AppointmentResponseDto(id=1, appointmentTime=2025-08-27T17:01, durationMinutes=30, appointmentStatu (truncated)...]
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=3, patientId=4, appointmentTime=2025-08-28T17:01, durationMinutes=60, (truncated)...]
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time between ? and ? 
    fetch
        first ? rows only
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time between ? and ? 
    fetch
        first ? rows only
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T17:01, durationMinutes=60, appointmentStatus (truncated)...]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#cancelAppointment(Long)
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_status,
        a1_0.appointment_time,
        a1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        a1_0.duration_minutes,
        a1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments a1_0 
    join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        a1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    update
        appointments 
    set
        appointment_status=?,
        appointment_time=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=? 
    where
        id=?
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=2, appointmentTime=2025-08-28T17:01, durationMinutes=60, appointmentStatus (truncated)...]
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T17:01:53.235383900, durati (truncated)...]
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time between ? and ? 
    fetch
        first ? rows only
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time between ? and ? 
    fetch
        first ? rows only
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=3, appointmentTime=2025-08-27T17:01:53.235383900, durationMinutes=30, appo (truncated)...]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=5, patientId=6, appointmentTime=2025-08-27T17:01:53.235383900, durati (truncated)...]
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time between ? and ? 
    fetch
        first ? rows only
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Doctor is already booked at this time."]
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=7, patientId=8, appointmentTime=2025-08-27T12:01:53.271434500, durati (truncated)...]
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time between ? and ? 
    fetch
        first ? rows only
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time between ? and ? 
    fetch
        first ? rows only
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        appointments
        (appointment_status, appointment_time, doctor_id, duration_minutes, notes, patient_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AppointmentResponseDto(id=4, appointmentTime=2025-08-27T12:01:53.271434500, durationMinutes=30, appo (truncated)...]
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=9, patientId=8, appointmentTime=2025-08-27T12:01:53.271434500, durati (truncated)...]
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users d1_0 
            on d1_0.id=a1_0.doctor_id 
    where
        d1_0.id=? 
        and a1_0.appointment_time between ? and ? 
    fetch
        first ? rows only
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        users p1_0 
            on p1_0.id=a1_0.patient_id 
    where
        p1_0.id=? 
        and a1_0.appointment_time between ? and ? 
    fetch
        first ? rows only
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Patient already has an appointment at this time."]
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        da1_0.doctor_id,
        da1_0.id,
        da1_0.appointment_status,
        da1_0.appointment_time,
        da1_0.duration_minutes,
        da1_0.notes,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        appointments da1_0 
    left join
        users p1_0 
            on p1_0.id=da1_0.patient_id 
    where
        da1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        dp1_0.doctor_id,
        dp1_0.id,
        dp1_0.issued_at,
        dp1_0.patient_id,
        p1_0.id,
        p1_0.email,
        p1_0.name,
        p1_0.password,
        p1_0.user_role 
    from
        prescriptions dp1_0 
    left join
        users p1_0 
            on p1_0.id=dp1_0.patient_id 
    where
        dp1_0.doctor_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        m1_0.pharmacy_id,
        m1_0.id,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.stock_quantity 
    from
        medicines m1_0 
    where
        m1_0.pharmacy_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        o1_0.patient_id,
        o1_0.id,
        o1_0.order_date,
        o1_0.status,
        o1_0.total_price 
    from
        orders o1_0 
    where
        o1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pa1_0.patient_id,
        pa1_0.id,
        pa1_0.appointment_status,
        pa1_0.appointment_time,
        pa1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pa1_0.duration_minutes,
        pa1_0.notes 
    from
        appointments pa1_0 
    left join
        users d1_0 
            on d1_0.id=pa1_0.doctor_id 
    where
        pa1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        pp1_0.patient_id,
        pp1_0.id,
        pp1_0.doctor_id,
        d1_0.id,
        d1_0.email,
        d1_0.name,
        d1_0.password,
        d1_0.user_role,
        pp1_0.issued_at 
    from
        prescriptions pp1_0 
    left join
        users d1_0 
            on d1_0.id=pp1_0.doctor_id 
    where
        pp1_0.patient_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        rm1_0.receiver_id,
        rm1_0.id,
        rm1_0.content,
        rm1_0.sender_id,
        s1_0.id,
        s1_0.email,
        s1_0.name,
        s1_0.password,
        s1_0.user_role,
        rm1_0.timestamp 
    from
        messages rm1_0 
    left join
        users s1_0 
            on s1_0.id=rm1_0.sender_id 
    where
        rm1_0.receiver_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    select
        sm1_0.sender_id,
        sm1_0.id,
        sm1_0.content,
        sm1_0.receiver_id,
        r1_0.id,
        r1_0.email,
        r1_0.name,
        r1_0.password,
        r1_0.user_role,
        sm1_0.timestamp 
    from
        messages sm1_0 
    left join
        users r1_0 
            on r1_0.id=sm1_0.receiver_id 
    where
        sm1_0.sender_id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        appointments 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role, id) 
    values
        (?, ?, ?, ?, default)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AppointmentController#createAppointment(AppointmentRequestDto)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json" to [AppointmentRequestDto(doctorId=10, patientId=11, appointmentTime=2025-08-27T17:01, durationMinutes=2 (truncated)...]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler hospitalSystem.example.Hospital.exception.GlobalExceptionHandler#handleValidationErrors(MethodArgumentNotValidException)
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{messages={durationMinutes=must be greater than or equal to 5}, error=Validation Error, timestamp=20 (truncated)...]
2025-08-26 17:01:53 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> hospitalSystem.example.Hospital.controller.AppointmentController.createAppointment(hospitalSystem.example.Hospital.dto.request.AppointmentRequestDto): [Field error in object 'appointmentRequestDto' on field 'durationMinutes': rejected value [2]; codes [Min.appointmentRequestDto.durationMinutes,Min.durationMinutes,Min.java.lang.Integer,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [appointmentRequestDto.durationMinutes,durationMinutes]; arguments []; default message [durationMinutes],5]; default message [must be greater than or equal to 5]] ]
2025-08-26 17:01:53 DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@3c904f1e, started on Tue Aug 26 17:01:49 EEST 2025
2025-08-26 17:01:53 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-26 17:01:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-26 17:01:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 16:43:49 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-27 16:43:49 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 21.0.8 with PID 17356 (C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes started by Seif in C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital)
2025-08-27 16:43:49 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-27 16:43:49 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 16:43:49 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 16:43:49 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 16:43:50 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 16:43:50 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 8 JPA repository interfaces.
2025-08-27 16:43:51 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-27 16:43:51 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-27 16:43:51 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 16:43:51 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-27 16:43:51 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 16:43:51 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1947 ms
2025-08-27 16:43:51 ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes\hospitalSystem\example\Hospital\config\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'jwtService': Unsatisfied dependency expressed through field 'EXPIRATION': Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "86400000#24hoursinms"
2025-08-27 16:43:51 INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-27 16:43:51 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-08-27 16:43:51 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-27 16:43:51 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at hospitalSystem.example.Hospital.HospitalApplication.main(HospitalApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:147)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes\hospitalSystem\example\Hospital\config\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'jwtService': Unsatisfied dependency expressed through field 'EXPIRATION': Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "86400000#24hoursinms"
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	... 16 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtService': Unsatisfied dependency expressed through field 'EXPIRATION': Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "86400000#24hoursinms"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1690)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 57 common frames omitted
Caused by: org.springframework.beans.TypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "86400000#24hoursinms"
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:87)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:71)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1664)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 71 common frames omitted
Caused by: java.lang.NumberFormatException: For input string: "86400000#24hoursinms"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Long.parseLong(Long.java:709)
	at java.base/java.lang.Long.valueOf(Long.java:1157)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:204)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:412)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:161)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:80)
	... 75 common frames omitted
2025-08-27 16:44:00 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-27 16:44:00 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 21.0.8 with PID 3216 (C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes started by Seif in C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital)
2025-08-27 16:44:00 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-27 16:44:00 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 16:44:00 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 16:44:00 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 16:44:01 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 16:44:01 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 8 JPA repository interfaces.
2025-08-27 16:44:02 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-27 16:44:02 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-27 16:44:02 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 16:44:02 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-27 16:44:02 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 16:44:02 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1173 ms
2025-08-27 16:44:02 ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes\hospitalSystem\example\Hospital\config\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'jwtService': Unsatisfied dependency expressed through field 'EXPIRATION': Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "86400000#24hoursinms"
2025-08-27 16:44:02 INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-27 16:44:02 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-08-27 16:44:02 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-27 16:44:02 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at hospitalSystem.example.Hospital.HospitalApplication.main(HospitalApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:147)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes\hospitalSystem\example\Hospital\config\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'jwtService': Unsatisfied dependency expressed through field 'EXPIRATION': Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "86400000#24hoursinms"
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	... 16 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtService': Unsatisfied dependency expressed through field 'EXPIRATION': Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "86400000#24hoursinms"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1690)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 57 common frames omitted
Caused by: org.springframework.beans.TypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "86400000#24hoursinms"
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:87)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:71)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1664)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 71 common frames omitted
Caused by: java.lang.NumberFormatException: For input string: "86400000#24hoursinms"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Long.parseLong(Long.java:709)
	at java.base/java.lang.Long.valueOf(Long.java:1157)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:204)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:412)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:161)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:80)
	... 75 common frames omitted
2025-08-27 16:44:49 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-27 16:44:49 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 21.0.8 with PID 12804 (C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes started by Seif in C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital)
2025-08-27 16:44:49 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-27 16:44:49 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 16:44:49 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 16:44:49 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 16:44:50 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 16:44:50 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 8 JPA repository interfaces.
2025-08-27 16:44:50 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-27 16:44:50 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-27 16:44:50 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 16:44:50 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-27 16:44:50 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 16:44:50 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1127 ms
2025-08-27 16:44:51 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 16:44:51 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3c6f5c5c
2025-08-27 16:44:51 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 16:44:51 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 16:44:51 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-27 16:44:51 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-27 16:44:51 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 16:44:51 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-27 16:44:51 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-27 16:44:51 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-27 16:44:52 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-27 16:44:52 DEBUG org.hibernate.SQL - 
    create table appointments (
        id bigint not null auto_increment,
        appointment_status enum ('AVAILABLE','CANCELLED','CONFIRMED') not null,
        appointment_time datetime(6) not null,
        duration_minutes integer not null,
        notes varchar(255),
        doctor_id bigint not null,
        patient_id bigint,
        primary key (id)
    ) engine=InnoDB
2025-08-27 16:44:52 DEBUG org.hibernate.SQL - 
    create table medicine_details (
        id bigint not null auto_increment,
        dosage integer not null,
        instructions varchar(100) not null,
        medicine_id bigint,
        prescription_id bigint,
        primary key (id)
    ) engine=InnoDB
2025-08-27 16:44:52 DEBUG org.hibernate.SQL - 
    create table medicines (
        id bigint not null auto_increment,
        description varchar(255),
        name varchar(20) not null,
        price float(53) not null,
        stock_quantity integer not null,
        pharmacy_id bigint,
        primary key (id)
    ) engine=InnoDB
2025-08-27 16:44:52 DEBUG org.hibernate.SQL - 
    create table messages (
        id bigint not null auto_increment,
        content varchar(100) not null,
        timestamp datetime(6) not null,
        receiver_id bigint not null,
        sender_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-08-27 16:44:52 DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint not null auto_increment,
        price float(53) not null,
        quantity integer not null,
        medicine_id bigint,
        order_id bigint,
        primary key (id)
    ) engine=InnoDB
2025-08-27 16:44:52 DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint not null auto_increment,
        order_date date not null,
        status enum ('CANCELLED','DELIVERED','PAID','PENDING','SHIPPED') not null,
        total_price float(53) not null,
        patient_id bigint,
        primary key (id)
    ) engine=InnoDB
2025-08-27 16:44:52 DEBUG org.hibernate.SQL - 
    create table prescriptions (
        id bigint not null auto_increment,
        issued_at datetime(6) not null,
        doctor_id bigint not null,
        patient_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-08-27 16:44:52 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint not null auto_increment,
        email varchar(50) not null,
        name varchar(20) not null,
        password varchar(100) not null,
        user_role enum ('ADMIN','DOCTOR','PATIENT','PHARMACY') not null,
        primary key (id)
    ) engine=InnoDB
2025-08-27 16:44:52 DEBUG org.hibernate.SQL - 
    alter table users 
       drop index UK6dotkott2kjsp8vw4d0m25fb7
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table appointments 
       add constraint FK6u6s6egu60m2cbdjno44jbipa 
       foreign key (doctor_id) 
       references users (id)
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table appointments 
       add constraint FKopb2h9yhin1rb4dqote8bws6w 
       foreign key (patient_id) 
       references users (id)
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table medicine_details 
       add constraint FKo0ynecj18cxt8ln7i1wm603os 
       foreign key (medicine_id) 
       references medicines (id)
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table medicine_details 
       add constraint FK29e8oyuti5pw4eq5l405ud5h 
       foreign key (prescription_id) 
       references prescriptions (id)
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table medicines 
       add constraint FKa04qsrf8uoa7k52vwkpu3ulqo 
       foreign key (pharmacy_id) 
       references users (id)
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table messages 
       add constraint FKt05r0b6n0iis8u7dfna4xdh73 
       foreign key (receiver_id) 
       references users (id)
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table messages 
       add constraint FK4ui4nnwntodh6wjvck53dbk9m 
       foreign key (sender_id) 
       references users (id)
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table order_items 
       add constraint FKg9h7rx5ml7y47afcha8tiftsk 
       foreign key (medicine_id) 
       references medicines (id)
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders (id)
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table orders 
       add constraint FKdkk3672x0oqs4lrc2pxcvmu2l 
       foreign key (patient_id) 
       references users (id)
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table prescriptions 
       add constraint FK2hdpvkpjjx3plf21194oxjskt 
       foreign key (doctor_id) 
       references users (id)
2025-08-27 16:44:53 DEBUG org.hibernate.SQL - 
    alter table prescriptions 
       add constraint FK7sia9wnwh9j5hwrta9k8q0rbq 
       foreign key (patient_id) 
       references users (id)
2025-08-27 16:44:53 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:44:54 DEBUG h.e.H.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-27 16:44:54 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-27 16:44:54 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-27 16:44:54 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-27 16:44:54 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 16:44:54 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 15 mappings in 'requestMappingHandlerMapping'
2025-08-27 16:44:54 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-27 16:44:54 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-27 16:44:54 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-27 16:44:54 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3350/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-27 16:44:54 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 16:44:54 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-27 16:44:54 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-27 16:44:54 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 5.438 seconds (process running for 6.111)
2025-08-27 16:45:05 INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 80 class path changes (0 additions, 79 deletions, 1 modification)
2025-08-27 16:45:05 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-27 16:45:05 INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8081"]
2025-08-27 16:45:05 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-27 16:45:05 INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8081"]
2025-08-27 16:45:05 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:45:05 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 16:45:05 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 16:45:05 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 21.0.8 with PID 12804 (C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes started by Seif in C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital)
2025-08-27 16:45:05 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-27 16:45:05 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 16:45:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 16:45:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 JPA repository interfaces.
2025-08-27 16:45:05 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-27 16:45:05 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-27 16:45:05 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 16:45:05 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-27 16:45:06 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 16:45:06 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 468 ms
2025-08-27 16:45:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-27 16:45:06 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2f2628af
2025-08-27 16:45:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-27 16:45:06 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 16:45:06 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-27 16:45:06 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 16:45:06 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-27 16:45:06 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-27 16:45:06 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-27 16:45:06 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-27 16:45:06 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:45:06 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 16:45:06 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 2 mappings in 'requestMappingHandlerMapping'
2025-08-27 16:45:06 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-27 16:45:06 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-27 16:45:06 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-27 16:45:06 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3350/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-27 16:45:06 WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 2898ee36-4365-4928-bb72-9c765aa6bfed

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-27 16:45:06 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-27 16:45:06 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 16:45:06 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-27 16:45:06 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-27 16:45:06 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 0.82 seconds (process running for 17.664)
2025-08-27 16:45:06 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration matched:
      - AllNestedConditions 2 matched 0 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)
      - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) did not find any beans (OnBeanCondition)

   UserDetailsServiceAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - AnyNestedCondition 1 matched 2 did not; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.PasswordConfigured @ConditionalOnProperty (spring.security.user.password) did not find property 'spring.security.user.password'; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.NameConfigured @ConditionalOnProperty (spring.security.user.name) did not find property 'spring.security.user.name'; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.MissingAlternative @ConditionalOnMissingClass did not find unwanted classes 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository', 'org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector', 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured)
      - @ConditionalOnBean (types: org.springframework.security.config.ObjectPostProcessor; SearchStrategy: all) found beans 'objectPostProcessor', 'webAuthorizationManagerPostProcessor', 'filterChainDecoratorPostProcessor', 'authenticationManagerPostProcessor'; @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,?; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

    None


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



2025-08-27 16:45:09 INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 79 class path changes (79 additions, 0 deletions, 0 modifications)
2025-08-27 16:45:09 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-27 16:45:09 INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8081"]
2025-08-27 16:45:09 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-27 16:45:09 INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8081"]
2025-08-27 16:45:09 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:45:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-27 16:45:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-27 16:45:09 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 21.0.8 with PID 12804 (C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes started by Seif in C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital)
2025-08-27 16:45:09 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-27 16:45:09 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 16:45:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 16:45:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 8 JPA repository interfaces.
2025-08-27 16:45:10 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-27 16:45:10 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-27 16:45:10 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 16:45:10 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-27 16:45:10 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 16:45:10 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 688 ms
2025-08-27 16:45:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-27 16:45:10 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e0152b3
2025-08-27 16:45:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-27 16:45:10 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 16:45:10 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-27 16:45:10 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 16:45:10 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-27 16:45:10 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-27 16:45:10 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-27 16:45:10 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-27 16:45:10 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:45:10 DEBUG h.e.H.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-27 16:45:10 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-27 16:45:11 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-27 16:45:11 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-27 16:45:11 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 16:45:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 15 mappings in 'requestMappingHandlerMapping'
2025-08-27 16:45:11 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-27 16:45:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-27 16:45:11 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-27 16:45:11 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3350/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-27 16:45:11 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 16:45:11 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-27 16:45:11 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-27 16:45:11 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 1.676 seconds (process running for 22.732)
2025-08-27 16:45:11 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

    None


Negative matches:
-----------------

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' securityFilterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,?; SearchStrategy: all) found beans of type 'org.springframework.security.authentication.AuthenticationManager' authenticationManager and found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService and found beans of type 'org.springframework.security.authentication.AuthenticationProvider' authenticationProvider (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - AnyNestedCondition 1 matched 2 did not; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.PasswordConfigured @ConditionalOnProperty (spring.security.user.password) did not find property 'spring.security.user.password'; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.NameConfigured @ConditionalOnProperty (spring.security.user.name) did not find property 'spring.security.user.name'; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.MissingAlternative @ConditionalOnMissingClass did not find unwanted classes 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository', 'org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector', 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



2025-08-27 16:47:44 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 16:47:44 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 16:47:44 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-27 16:47:44 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-27 16:47:44 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-27 16:47:44 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@50ee2b10
2025-08-27 16:47:44 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1dca1e6e
2025-08-27 16:47:44 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-27 16:47:44 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-27 16:48:05 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-27 16:48:05 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-27 16:48:05 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:48:05 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-27 16:48:05 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-27 16:48:09 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-27 16:48:09 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 21.0.8 with PID 32936 (C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes started by Seif in C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital)
2025-08-27 16:48:09 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-27 16:48:09 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 16:48:09 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 16:48:09 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 16:48:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 16:48:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 8 JPA repository interfaces.
2025-08-27 16:48:10 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-27 16:48:10 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-27 16:48:10 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 16:48:10 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-27 16:48:10 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 16:48:10 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1228 ms
2025-08-27 16:48:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 16:48:10 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6f1e19fa
2025-08-27 16:48:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 16:48:10 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 16:48:10 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-27 16:48:10 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-27 16:48:11 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 16:48:11 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-27 16:48:11 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-27 16:48:11 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-27 16:48:12 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-27 16:48:12 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:48:12 DEBUG h.e.H.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-27 16:48:12 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-27 16:48:12 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-27 16:48:12 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-27 16:48:12 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 16:48:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 15 mappings in 'requestMappingHandlerMapping'
2025-08-27 16:48:12 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-27 16:48:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-27 16:48:13 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-27 16:48:13 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3350/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-27 16:48:13 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 16:48:13 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-27 16:48:13 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-27 16:48:13 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 4.372 seconds (process running for 4.927)
2025-08-27 16:48:18 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 16:48:18 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 16:48:18 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-27 16:48:18 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-27 16:48:18 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-27 16:48:18 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6de90848
2025-08-27 16:48:18 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6f5a83b9
2025-08-27 16:48:18 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-27 16:48:18 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-27 16:48:18 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/register", parameters={}
2025-08-27 16:48:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(RegisterRequest)
2025-08-27 16:48:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(name=John Doe, email=johndoe@example.com, password=StrongPassword123, userRole=DOCTO (truncated)...]
2025-08-27 16:48:18 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.NullPointerException: Cannot invoke "hospitalSystem.example.Hospital.service.Auth.AuthService.register(hospitalSystem.example.Hospital.dto.auth.RegisterRequest)" because "this.authService" is null
2025-08-27 16:48:18 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "hospitalSystem.example.Hospital.service.Auth.AuthService.register(hospitalSystem.example.Hospital.dto.auth.RegisterRequest)" because "this.authService" is null] with root cause
java.lang.NullPointerException: Cannot invoke "hospitalSystem.example.Hospital.service.Auth.AuthService.register(hospitalSystem.example.Hospital.dto.auth.RegisterRequest)" because "this.authService" is null
	at hospitalSystem.example.Hospital.controller.AuthController.register(AuthController.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at hospitalSystem.example.Hospital.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-27 16:49:21 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-27 16:49:21 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-27 16:49:21 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:49:21 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 16:49:21 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 16:49:24 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-27 16:49:25 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 21.0.8 with PID 15288 (C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes started by Seif in C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital)
2025-08-27 16:49:25 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-27 16:49:25 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 16:49:25 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 16:49:25 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 16:49:25 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 16:49:25 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 8 JPA repository interfaces.
2025-08-27 16:49:26 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-27 16:49:26 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-27 16:49:26 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 16:49:26 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-27 16:49:26 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 16:49:26 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1150 ms
2025-08-27 16:49:26 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 16:49:26 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5ec947f5
2025-08-27 16:49:26 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 16:49:26 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 16:49:26 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-27 16:49:26 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-27 16:49:26 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 16:49:26 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-27 16:49:26 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-27 16:49:26 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-27 16:49:27 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-27 16:49:27 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:49:28 DEBUG h.e.H.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-27 16:49:28 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-27 16:49:28 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-27 16:49:28 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-27 16:49:28 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 16:49:28 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 15 mappings in 'requestMappingHandlerMapping'
2025-08-27 16:49:28 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-27 16:49:28 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-27 16:49:28 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-27 16:49:28 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3350/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-27 16:49:28 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 16:49:28 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-27 16:49:28 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-27 16:49:28 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 4.15 seconds (process running for 4.715)
2025-08-27 16:49:32 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 16:49:32 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 16:49:32 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-27 16:49:32 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-27 16:49:32 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-27 16:49:32 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@64679a9a
2025-08-27 16:49:32 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1acbb82b
2025-08-27 16:49:32 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-27 16:49:32 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-27 16:49:32 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/register", parameters={}
2025-08-27 16:49:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(RegisterRequest)
2025-08-27 16:49:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(name=John Doe, email=johndoe@example.com, password=StrongPassword123, userRole=DOCTO (truncated)...]
2025-08-27 16:49:32 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.NullPointerException: Cannot invoke "org.springframework.security.crypto.password.PasswordEncoder.encode(java.lang.CharSequence)" because "this.passwordEncoder" is null
2025-08-27 16:49:32 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "org.springframework.security.crypto.password.PasswordEncoder.encode(java.lang.CharSequence)" because "this.passwordEncoder" is null] with root cause
java.lang.NullPointerException: Cannot invoke "org.springframework.security.crypto.password.PasswordEncoder.encode(java.lang.CharSequence)" because "this.passwordEncoder" is null
	at hospitalSystem.example.Hospital.service.Auth.AuthService.register(AuthService.java:30)
	at hospitalSystem.example.Hospital.controller.AuthController.register(AuthController.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at hospitalSystem.example.Hospital.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:39)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-27 16:50:10 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-27 16:50:10 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-27 16:50:10 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:50:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 16:50:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 16:50:14 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-27 16:50:14 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 21.0.8 with PID 8980 (C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes started by Seif in C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital)
2025-08-27 16:50:14 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-27 16:50:14 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 16:50:14 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 16:50:14 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 16:50:14 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 16:50:14 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 8 JPA repository interfaces.
2025-08-27 16:50:15 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-27 16:50:15 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-27 16:50:15 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 16:50:15 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-27 16:50:15 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 16:50:15 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1154 ms
2025-08-27 16:50:15 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 16:50:15 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@34b1df7e
2025-08-27 16:50:15 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 16:50:15 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 16:50:15 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-27 16:50:15 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-27 16:50:15 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 16:50:15 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-27 16:50:15 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-27 16:50:15 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-27 16:50:16 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-27 16:50:16 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:50:17 DEBUG h.e.H.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-27 16:50:17 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-27 16:50:17 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-27 16:50:17 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-27 16:50:17 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 16:50:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 15 mappings in 'requestMappingHandlerMapping'
2025-08-27 16:50:17 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-27 16:50:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-27 16:50:17 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-27 16:50:17 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3350/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-27 16:50:17 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 16:50:17 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-27 16:50:17 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-27 16:50:17 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 4.175 seconds (process running for 4.735)
2025-08-27 16:50:25 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 16:50:25 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 16:50:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-27 16:50:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-27 16:50:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-27 16:50:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@ac6ad7b
2025-08-27 16:50:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@71f5375
2025-08-27 16:50:25 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-27 16:50:25 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-27 16:50:25 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/register", parameters={}
2025-08-27 16:50:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(RegisterRequest)
2025-08-27 16:50:25 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(name=John Doe, email=johndoe@example.com, password=StrongPassword123, userRole=DOCTO (truncated)...]
2025-08-27 16:50:25 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, name, password, user_role) 
    values
        (?, ?, ?, ?)
2025-08-27 16:50:25 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-27 16:50:25 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [AuthenticationResponse(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lQGV4YW1wbGUuY29tIiwiaWF0IjoxNz (truncated)...]
2025-08-27 16:50:25 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-27 16:51:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:51:10 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-08-27 16:51:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(AuthenticationRequest)
2025-08-27 16:51:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [AuthenticationRequest(email=johndoe@example.com, password=StrongPassword123)]
2025-08-27 16:51:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:51:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:51:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-27 16:51:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [AuthenticationResponse(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lQGV4YW1wbGUuY29tIiwiaWF0IjoxNz (truncated)...]
2025-08-27 16:51:10 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-27 16:51:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:51:18 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-08-27 16:51:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(AuthenticationRequest)
2025-08-27 16:51:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [AuthenticationRequest(email=johndoe@example.com, password=StrongPassword123)]
2025-08-27 16:51:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:51:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:51:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-27 16:51:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [AuthenticationResponse(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lQGV4YW1wbGUuY29tIiwiaWF0IjoxNz (truncated)...]
2025-08-27 16:51:18 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-27 16:51:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:51:22 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-08-27 16:51:22 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(AuthenticationRequest)
2025-08-27 16:51:22 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [AuthenticationRequest(email=jodoe@example.com, password=StrongPassword123)]
2025-08-27 16:51:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:51:22 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.security.authentication.BadCredentialsException: Bad credentials
2025-08-27 16:51:29 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-27 16:51:29 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-27 16:51:29 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:51:29 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 16:51:29 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 16:56:31 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-27 16:56:31 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 21.0.8 with PID 31480 (C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes started by Seif in C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital)
2025-08-27 16:56:31 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-27 16:56:31 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 16:56:31 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 16:56:31 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 16:56:32 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 16:56:32 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 8 JPA repository interfaces.
2025-08-27 16:56:33 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-27 16:56:33 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-27 16:56:33 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 16:56:33 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-27 16:56:33 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 16:56:33 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1169 ms
2025-08-27 16:56:33 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 16:56:33 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@60265003
2025-08-27 16:56:33 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 16:56:33 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 16:56:33 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-27 16:56:33 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-27 16:56:33 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 16:56:33 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-27 16:56:33 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-27 16:56:33 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-27 16:56:34 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-27 16:56:34 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:56:35 DEBUG h.e.H.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-27 16:56:35 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-27 16:56:35 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-27 16:56:35 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-27 16:56:35 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 16:56:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 15 mappings in 'requestMappingHandlerMapping'
2025-08-27 16:56:35 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-27 16:56:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-27 16:56:35 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-27 16:56:35 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3350/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-27 16:56:35 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 16:56:35 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-27 16:56:35 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-27 16:56:35 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 4.25 seconds (process running for 4.834)
2025-08-27 16:56:37 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 16:56:37 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 16:56:37 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-27 16:56:37 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-27 16:56:37 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-27 16:56:37 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3077974b
2025-08-27 16:56:37 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@232694bb
2025-08-27 16:56:37 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-27 16:56:37 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-27 16:56:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:56:37 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-08-27 16:56:37 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(AuthenticationRequest)
2025-08-27 16:56:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [AuthenticationRequest(email=johndoe@example.com, password=StrongPassword123)]
2025-08-27 16:56:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:56:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:56:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-27 16:56:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [AuthenticationResponse(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lQGV4YW1wbGUuY29tIiwiaWF0IjoxNz (truncated)...]
2025-08-27 16:56:37 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-27 16:56:42 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:56:42 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-08-27 16:56:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(AuthenticationRequest)
2025-08-27 16:56:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [AuthenticationRequest(email=hndoe@example.com, password=StrongPassword123)]
2025-08-27 16:56:42 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:56:42 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.security.authentication.BadCredentialsException: Bad credentials
2025-08-27 16:58:04 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-27 16:58:04 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-27 16:58:04 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:58:04 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 16:58:04 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 16:58:09 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-27 16:58:09 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 21.0.8 with PID 34388 (C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes started by Seif in C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital)
2025-08-27 16:58:09 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-27 16:58:09 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 16:58:09 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 16:58:09 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 16:58:09 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 16:58:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68 ms. Found 8 JPA repository interfaces.
2025-08-27 16:58:10 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-27 16:58:10 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-27 16:58:10 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 16:58:10 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-27 16:58:10 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 16:58:10 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1273 ms
2025-08-27 16:58:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 16:58:10 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d9ea998
2025-08-27 16:58:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 16:58:10 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 16:58:10 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-27 16:58:10 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-27 16:58:11 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 16:58:11 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-27 16:58:11 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-27 16:58:11 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-27 16:58:12 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-27 16:58:12 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:58:12 DEBUG h.e.H.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-27 16:58:12 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-27 16:58:12 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-27 16:58:12 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-27 16:58:12 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 16:58:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 15 mappings in 'requestMappingHandlerMapping'
2025-08-27 16:58:12 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-27 16:58:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-27 16:58:12 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-27 16:58:12 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3350/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-27 16:58:13 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 16:58:13 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-27 16:58:13 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-27 16:58:13 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 4.248 seconds (process running for 4.94)
2025-08-27 16:58:16 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 16:58:16 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 16:58:16 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-27 16:58:16 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-27 16:58:16 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-27 16:58:16 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4f6e33ab
2025-08-27 16:58:16 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@59f9797d
2025-08-27 16:58:16 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-27 16:58:16 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-27 16:58:17 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:58:17 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-08-27 16:58:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(AuthenticationRequest)
2025-08-27 16:58:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [AuthenticationRequest(email=hndoe@example.com, password=StrongPassword123)]
2025-08-27 16:58:17 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:58:17 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.security.authentication.BadCredentialsException: Bad credentials
2025-08-27 16:58:24 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:58:24 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-08-27 16:58:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(AuthenticationRequest)
2025-08-27 16:58:24 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [AuthenticationRequest(email=hndoe@example.com, password=StrongPassword123)]
2025-08-27 16:58:24 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:58:24 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.security.authentication.BadCredentialsException: Bad credentials
2025-08-27 16:59:35 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-27 16:59:35 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-27 16:59:35 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:59:35 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 16:59:35 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 16:59:38 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-27 16:59:39 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 21.0.8 with PID 17800 (C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes started by Seif in C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital)
2025-08-27 16:59:39 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-27 16:59:39 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 16:59:39 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 16:59:39 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 16:59:39 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 16:59:39 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 8 JPA repository interfaces.
2025-08-27 16:59:40 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-27 16:59:40 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-27 16:59:40 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 16:59:40 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-27 16:59:40 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 16:59:40 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1146 ms
2025-08-27 16:59:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 16:59:40 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31d22d6b
2025-08-27 16:59:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 16:59:40 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 16:59:40 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-27 16:59:40 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-27 16:59:40 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 16:59:40 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-27 16:59:40 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-27 16:59:40 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-27 16:59:41 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-27 16:59:41 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 16:59:42 DEBUG h.e.H.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-27 16:59:42 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-27 16:59:42 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-27 16:59:42 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-27 16:59:42 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 16:59:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 15 mappings in 'requestMappingHandlerMapping'
2025-08-27 16:59:42 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-27 16:59:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-27 16:59:42 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-27 16:59:42 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3350/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-27 16:59:42 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 16:59:42 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-27 16:59:42 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-27 16:59:42 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 4.17 seconds (process running for 4.743)
2025-08-27 16:59:47 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 16:59:47 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 16:59:47 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-27 16:59:47 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-27 16:59:47 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-27 16:59:47 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6cb9971a
2025-08-27 16:59:47 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@191cac7d
2025-08-27 16:59:47 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-27 16:59:47 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-27 16:59:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:59:47 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-08-27 16:59:47 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(AuthenticationRequest)
2025-08-27 16:59:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [AuthenticationRequest(email=hndoe@example.com, password=StrongPassword123)]
2025-08-27 16:59:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 16:59:47 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.security.authentication.BadCredentialsException: Bad credentials
2025-08-27 17:01:16 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-27 17:01:16 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-27 17:01:16 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 17:01:16 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 17:01:16 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-27 17:01:21 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
2025-08-27 17:01:21 INFO  h.e.Hospital.HospitalApplication - Starting HospitalApplication using Java 21.0.8 with PID 25484 (C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital\target\classes started by Seif in C:\Users\Dell\Desktop\Coding\Banque-Misr-Internship\Hospital-Management-System\Hospital)
2025-08-27 17:01:21 DEBUG h.e.Hospital.HospitalApplication - Running with Spring Boot v3.5.5, Spring v6.2.10
2025-08-27 17:01:21 INFO  h.e.Hospital.HospitalApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-27 17:01:21 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-27 17:01:21 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-27 17:01:22 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-27 17:01:22 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 8 JPA repository interfaces.
2025-08-27 17:01:22 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-08-27 17:01:22 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-08-27 17:01:22 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-27 17:01:22 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-27 17:01:22 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-27 17:01:22 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1198 ms
2025-08-27 17:01:22 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-27 17:01:23 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2764b9e4
2025-08-27 17:01:23 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-27 17:01:23 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-27 17:01:23 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-27 17:01:23 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-27 17:01:23 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-27 17:01:23 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-27 17:01:23 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-27 17:01:23 INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-27 17:01:24 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-27 17:01:24 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 17:01:24 DEBUG h.e.H.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-27 17:01:24 INFO  h.e.Hospital.config.LoggingConfig - LoggingConfig initialized
2025-08-27 17:01:24 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-27 17:01:24 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-27 17:01:24 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-27 17:01:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 15 mappings in 'requestMappingHandlerMapping'
2025-08-27 17:01:25 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-27 17:01:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-27 17:01:25 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-27 17:01:25 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3350/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-08-27 17:01:25 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-27 17:01:25 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-08-27 17:01:25 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/'
2025-08-27 17:01:25 INFO  h.e.Hospital.HospitalApplication - Started HospitalApplication in 4.359 seconds (process running for 4.938)
2025-08-27 17:01:28 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-27 17:01:28 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-27 17:01:28 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-27 17:01:28 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-27 17:01:28 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-27 17:01:28 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@f75143
2025-08-27 17:01:28 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2539b717
2025-08-27 17:01:28 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-27 17:01:28 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-27 17:01:28 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 17:01:28 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-08-27 17:01:28 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(AuthenticationRequest)
2025-08-27 17:01:28 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [AuthenticationRequest(email=hndoe@example.com, password=StrongPassword123)]
2025-08-27 17:01:28 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 17:01:28 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.security.authentication.BadCredentialsException: Bad credentials
2025-08-27 17:02:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 17:02:01 DEBUG o.s.web.servlet.DispatcherServlet - POST "/auth/login", parameters={}
2025-08-27 17:02:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to hospitalSystem.example.Hospital.controller.AuthController#register(AuthenticationRequest)
2025-08-27 17:02:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [AuthenticationRequest(email=johndoe@example.com, password=StrongPassword123)]
2025-08-27 17:02:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 17:02:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.user_role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-27 17:02:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-27 17:02:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [AuthenticationResponse(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huZG9lQGV4YW1wbGUuY29tIiwiaWF0IjoxNz (truncated)...]
2025-08-27 17:02:01 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-27 17:24:57 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-27 17:24:57 INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-27 17:24:57 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-27 17:24:57 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-27 17:24:57 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
